services:
  postgres_airflow:
    image: postgres:13
    container_name: airflow_postgres
    restart: always
    environment:
      POSTGRES_USER: ${AIRFLOW_POSTGRES_USER}
      POSTGRES_PASSWORD: ${AIRFLOW_POSTGRES_PASSWORD}
      POSTGRES_DB: ${AIRFLOW_POSTGRES_DB}
    ports:
      - "5433:5432"
    volumes:
      - postgres_airflow_data:/var/lib/postgresql/data
  
  postgres_datalake:
    image: postgres:15
    container_name: datalake_postgres
    restart: always
    environment:
      POSTGRES_HOST: ${DB_POSTGRES_HOST}
      POSTGRES_USER: ${DB_POSTGRES_USER}
      POSTGRES_PASSWORD: ${DB_POSTGRES_PASSWORD}
      POSTGRES_DB: ${DB_POSTGRES_DB}
      POSTGRES_PORT: ${DB_POSTGRES_PORT}
    ports:
      - "5432:5432"
    volumes:
      - postgres_datalake_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d

  airflow-webserver:
    image: apache/airflow:2.10.5
    build:
      context: .
      dockerfile: Dockerfile
    container_name: airflow_webserver
    restart: always
    depends_on:
      - postgres_airflow
      - airflow-init
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor      
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${AIRFLOW_POSTGRES_USER}:${AIRFLOW_POSTGRES_PASSWORD}@${AIRFLOW_POSTGRES_HOST}/${AIRFLOW_POSTGRES_DB}
      AIRFLOW__CORE__FERNET_KEY: ''      
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      _PIP_ADDITIONAL_REQUIREMENTS: ${_PIP_ADDITIONAL_REQUIREMENTS:-}
      POSTGRES_HOST: ${DB_POSTGRES_HOST}
      POSTGRES_USER: ${DB_POSTGRES_USER}
      POSTGRES_PASSWORD: ${DB_POSTGRES_PASSWORD}
      POSTGRES_NAME: ${DB_POSTGRES_DB}
      POSTGRES_PORT: ${DB_POSTGRES_PORT}
    ports:
      - "8080:8080"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./data:/usr/local/airflow/data
    command: webserver

  airflow-scheduler:
    image: apache/airflow:2.10.5
    build:
      context: .
      dockerfile: Dockerfile
    container_name: airflow_scheduler
    restart: always
    depends_on:
      - airflow-webserver
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor      
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${AIRFLOW_POSTGRES_USER}:${AIRFLOW_POSTGRES_PASSWORD}@${AIRFLOW_POSTGRES_HOST}/${AIRFLOW_POSTGRES_DB}
      AIRFLOW__CORE__FERNET_KEY: ''
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      _PIP_ADDITIONAL_REQUIREMENTS: ${_PIP_ADDITIONAL_REQUIREMENTS:-}
      POSTGRES_HOST: ${DB_POSTGRES_HOST}
      POSTGRES_USER: ${DB_POSTGRES_USER}
      POSTGRES_PASSWORD: ${DB_POSTGRES_PASSWORD}
      POSTGRES_NAME: ${DB_POSTGRES_DB}
      POSTGRES_PORT: ${DB_POSTGRES_PORT}
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./data:/usr/local/airflow/data
    command: scheduler

  airflow-init:
    image: apache/airflow:2.10.5
    container_name: airflow_init
    depends_on:
      - postgres_airflow
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor      
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${AIRFLOW_POSTGRES_USER}:${AIRFLOW_POSTGRES_PASSWORD}@${AIRFLOW_POSTGRES_HOST}/${AIRFLOW_POSTGRES_DB}
      AIRFLOW__CORE__FERNET_KEY: ''
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      AIRFLOW_POSTGRES_USER: ${AIRFLOW_POSTGRES_USER}
      AIRFLOW_POSTGRES_PASSWORD: ${AIRFLOW_POSTGRES_PASSWORD}
      AIRFLOW_POSTGRES_DB_FIRSTNAME: ${AIRFLOW_POSTGRES_DB_FIRSTNAME}
      AIRFLOW_POSTGRES_DB_LASTNAME: ${AIRFLOW_POSTGRES_DB_LASTNAME}
      AIRFLOW_POSTGRES_DB_ROLE: ${AIRFLOW_POSTGRES_DB_ROLE}
      AIRFLOW_POSTGRES_DB_EMAIL: ${AIRFLOW_POSTGRES_DB_EMAIL}
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./data:/usr/local/airflow/data    
    entrypoint: ["/bin/bash", "-c", 'airflow db init && airflow users create --username $AIRFLOW_POSTGRES_USER --password $AIRFLOW_POSTGRES_PASSWORD --firstname $AIRFLOW_POSTGRES_DB_FIRSTNAME --lastname $AIRFLOW_POSTGRES_DB_LASTNAME --role $AIRFLOW_POSTGRES_DB_ROLE --email $AIRFLOW_POSTGRES_DB_EMAIL']

volumes:
  postgres_airflow_data:
  postgres_datalake_data: